[
    {
        "question_number": 1,
        "question_text": "Identify the various spheres of information in society",
        "answer": "Information plays a vital role in various domains of society, influencing decision-making, governance, business operations, and communication. The key spheres of information include: Personal Information Sphere: This includes an individual’s private data, such as identity details, health records, banking transactions, and social interactions. Protecting personal information is crucial to prevent identity theft and unauthorized access. Social Information Sphere: This refers to data exchanged in social environments, including social media, messaging apps, and online forums. It influences societal behavior, public opinion, and cultural trends. Economic Information Sphere: Businesses and financial institutions rely on economic information, such as stock market data, financial statements, economic policies, and business analytics, to make informed financial decisions. Political and Legal Information Sphere: This includes laws, policies, government regulations, and legal documents that govern a society. Information in this sphere is crucial for governance, justice, and policy-making. Scientific and Technological Information Sphere: Scientific research, technological advancements, patents, and academic publications form this sphere. It drives innovation and technological progress. Media and Entertainment Information Sphere: This consists of news, journalism, movies, television, music, and digital entertainment content that shape public perception and culture. Educational Information Sphere: Academic resources, research databases, e-learning platforms, and institutional records fall under this sphere, supporting the learning and intellectual growth of individuals. ",
        "keywords": [
           "information",  
"personal information",  
"privacy",  
"identity theft",  
"social information",  
"social media",  
"public opinion",  
"economic information",  
"stock market",  
"financial data",  
"business analytics",  
"political information",  
"legal information",  
"laws and policies",  
"governance",  
"justice system",  
"scientific research",  
"technological advancements",  
"patents",  
"innovation",  
"media and entertainment",  
"news and journalism",  
"digital content",  
"educational information",  
"e-learning",  
"academic resources"  

        ]
    },
    {
        "question_number": 2,
        "question_text": "Sketch the neat diagram of risk management cycle?",
        "answer": "The risk management cycle is a structured approach to identifying, assessing, mitigating, and monitoring risks in an organization. It involves four key phases: Risk Identification The first step is to identify potential risks that could impact an organization’s operations, data, or security. These risks could arise from cyber threats, natural disasters, hardware failures, or human errors. Identifying risks early helps in developing preventive strategies. Risk Assessment Once risks are identified, they are analyzed based on their likelihood of occurrence and potential impact. A risk matrix is often used to categorize risks as low, medium, or high, allowing organizations to prioritize which risks require immediate attention. Risk Mitigation After assessing risks, security measures and policies are implemented to minimize their impact. This could involve deploying firewalls, using encryption, enforcing strict access controls, and conducting regular security audits. Monitoring and Review Risk management is a continuous process. Risks need to be monitored regularly, and security policies must be updated as new threats emerge. Periodic reviews help organizations stay ahead of evolving cyber threats. ",
        "keywords": [
            "risk management",  
"risk identification",  
"risk assessment",  
"risk mitigation",  
"monitoring",  
"review",  
"organization",  
"security",  
"cyber threats",  
"natural disasters",  
"hardware failures",  
"human errors",  
"preventive strategies",  
"risk matrix",  
"low risk",  
"medium risk",  
"high risk",  
"prioritization",  
"security measures",  
"firewalls",  
"encryption",  
"access controls",  
"security audits",  
"continuous process",  
"threats",  
"periodic reviews"  

        ]
    },
    {
        "question_number": 3,
        "question_text": "How ransomware attacks the hard drive of a PC? Explain with reference to \nwannacry?\nRansomware is a type of malware that encrypts files on a system and demands a ransom payment for decryption. The WannaCry ransomware attack, which occurred in May 2017, was one of the most widespread ransomware incidents in history.",
        "answer": "Exploitation of Vulnerability: WannaCry exploited a vulnerability in Microsoft Windows using an exploit known as EternalBlue, which targeted outdated systems. File Encryption: Once infected, the malware encrypted files on the victim’s hard drive using RSA and AES encryption algorithms, making them inaccessible. Ransom Demand: After encryption, the system displayed a ransom note demanding Bitcoin payment for the decryption key. Victims were given a deadline, after which the ransom amount increased or files were permanently deleted. Propagation Mechanism: Unlike traditional ransomware, WannaCry could self-propagate across networks by exploiting the SMB (Server Message Block) protocol, affecting thousands of computers worldwide. Impact: WannaCry affected hospitals, banks, transportation networks, and government agencies, leading to massive disruptions. Organizations that had patched their systems were able to protect themselves, highlighting the importance of regular software updates. ",
        "keywords": [
            "exploitation",  
"vulnerability",  
"WannaCry",  
"Microsoft Windows",  
"EternalBlue",  
"outdated systems",  
"file encryption",  
"malware",  
"RSA encryption",  
"AES encryption",  
"ransom demand",  
"Bitcoin payment",  
"decryption key",  
"deadline",  
"ransom increase",  
"file deletion",  
"propagation",  
"self-propagation",  
"SMB protocol",  
"networks",  
"impact",  
"hospitals",  
"banks",  
"transportation networks",  
"government agencies",  
"disruptions",  
"software updates",  
"patched systems"  

        ]
    },
    {
        "question_number": 4,
        "question_text": "Quid pro quo means something for something, an attacker calls random \nnumbers at a company claiming to be calling back from technical support.\nEventually they will hit someone with a legitimate problem, grateful that someone\nis calling back to help them. The attacker will \"help\" solve the problem and in the\nprocess have the user type commands that give the attacker access or launch\nattack\nBy this method what are the type of attacks, the attacker can launch?\nA Quid Pro Quo attack is a form of social engineering where an attacker offers a supposed benefit to a victim in exchange for access or sensitive information.",
        "answer": "One common method involves an attacker calling random employees in a company, claiming to be from technical support. Eventually, they reach someone experiencing a legitimate issue. The victim, believing the attacker is providing assistance, follows instructions that may involve typing commands into their computer. These commands can: Grant Remote Access: The attacker may ask the user to install remote desktop software, allowing them to control the system. Deploy Malware: The attacker may instruct the user to download and execute a malicious file. Steal Credentials: By pretending to verify the user's identity, the attacker may trick them into revealing passwords or security answers. Launch Network Attacks: If the compromised system has administrative access, the attacker can infiltrate other systems within the network. These attacks exploit human trust rather than technical vulnerabilities, making awareness training a crucial defense against them. ",
        "keywords": [
           "attacker",  
"social engineering",  
"technical support scam",  
"random employees",  
"impersonation",  
"pretexting",  
"phishing ",  
"whishing ",  
"rootkit ",  
"legitimate issue",  
"victim",  
"instructions",  
"remote access",  
"remote desktop software",  
"system control",  
"deploy malware",  
"malicious file",  
"trojan",  
"ransomware",  
"steal credentials",  
"identity verification",  
"password theft",  
"multi-factor authentication bypass",  
"security answers",  
"network attacks",  
"privilege escalation",  
"administrative access",  
"infiltration",  
"company data breach",  
"unauthorized access",  
"human trust",  
"psychological manipulation",  
"awareness training",  
"cybersecurity education",  
"incident response",  
"social engineering defense",  
"technical vulnerabilities",  
"IT security policies",  
"zero trust security",  
"man-in-the-middle attack ",  
"SQL injection ",  
"denial-of-service (DoS) attack ",  
"cross-site scripting (XSS) ",  
"session hijacking ",  
"credential stuffing ",  
"brute force attack "  

        ]
    },
    {
        "question_number": 5,
        "question_text": "What is the difference between private key and public key encryption?\nEncryption ensures secure communication by encoding information so that only authorized parties can access it.",
        "answer": "Private Key Encryption (Symmetric Encryption): In this method, the same key is used for both encryption and decryption. It is faster but requires secure key distribution. Examples include AES (Advanced Encryption Standard) and DES (Data Encryption Standard). Public Key Encryption (Asymmetric Encryption): This method uses a pair of keys: a public key for encryption and a private key for decryption. It enhances security since the private key is never shared. Common algorithms include RSA (Rivest-Shamir-Adleman) and ECC (Elliptic Curve Cryptography). Symmetric encryption is preferred for speed, whereas asymmetric encryption is used for secure communication and digital signatures. ",
        "keywords": [
           "private key encryption",  
"symmetric encryption",  
"encryption",  
"decryption",  
"secure key distribution",  
"AES",  
"Advanced Encryption Standard",  
"DES",  
"Data Encryption Standard",  
"public key encryption",  
"asymmetric encryption",  
"public key",  
"private key",  
"key pair",  
"RSA",  
"Rivest-Shamir-Adleman",  
"ECC",  
"Elliptic Curve Cryptography",  
"secure communication",  
"digital signatures",  
"encryption algorithms",  
"cryptographic security",  
"data protection",  
"cybersecurity",  
"message confidentiality",  
"authentication",  
"integrity",  
"cryptographic keys",
"same keys" 

        ]
    },
    {
        "question_number": 6,
        "question_text": "Explain different phases of Security Systems Development Life Cycle (SSDLC)?\nThe Security System Development Life Cycle (SSDLC) is an extension of the Software Development Life Cycle (SDLC) that integrates security measures at every phase. It ensures that information security is a core component throughout development, reducing risks and enhancing system resilience.",
        "answer": "The SSDLC follows six primary phases, each addressing specific security concerns: a. Investigation Phase This initial phase sets the foundation for security integration by defining scope, resources, costs, and security policies required for the project. Key Activities: Management Approval & Planning: Senior management authorizes the security program and allocates resources. Defining Security Policies: Organizational security policies, including encryption standards, access control mechanisms, and regulatory compliance (such as ISO 27001, NIST, GDPR), are outlined. Formation of Security Team: A multidisciplinary team consisting of managers, employees, security experts, and contractors is formed. Feasibility Study: The feasibility of implementing security measures is assessed, considering technical, financial, and operational aspects. Outcome: A project charter and security policy document to guide the next phases. b. Analysis Phase The analysis phase involves evaluating existing security measures, identifying risks, and planning mitigation strategies. Key Activities: Review of Existing Documentation: The team assesses the organization's current security infrastructure and policies. Threat and Risk Analysis: Identify threats (malware, insider threats, DDoS, phishing, etc.). Classify risks based on likelihood and impact using methodologies like DREAD or CVSS (Common Vulnerability Scoring System). Evaluate existing control measures and determine their effectiveness. Risk Management Process: Identify risks related to data security, authentication mechanisms, and network security. Assess vulnerabilities in the system. Plan mitigation strategies to minimize potential damage. Outcome: A Risk Assessment Report outlining threats, vulnerabilities, and recommended security controls. c. Logical Design Phase This phase involves designing a security blueprint that details security requirements and response mechanisms. Key Activities: Developing a Security Architecture: Implement firewalls, intrusion detection systems (IDS), and encryption protocols. Define role-based access control (RBAC) and multi-factor authentication (MFA) mechanisms. Incident Response and Disaster Recovery Planning: Develop a disaster recovery plan (DRP) to handle security incidents. Define incident response actions for different security breaches. Business Continuity Planning (BCP): Estimating the impact of security failures and ensuring business continuity. Outcome: A security blueprint with documented security policies, access control mechanisms, and incident response plans. d. Physical Design Phase The Physical Design Phase ensures that the existing IT infrastructure can support the security measures planned in the logical design. Key Activities: Evaluating Hardware and Software Feasibility: Assess whether current IT infrastructure supports the proposed security architecture. Prototype Development: Develop proof-of-concept (PoC) prototypes to test security components. Simulate threat scenarios and assess system response. Cost Estimation: Estimate costs for implementing firewalls, antivirus solutions, security software, and intrusion prevention systems (IPS). Deployment Strategy: Finalize a deployment plan detailing how security components will be integrated into the system. Outcome: A Physical Security Design Document outlining security infrastructure and deployment strategies. e. Implementation and Testing Phase The Implementation and Testing Phase ensures that all security controls are correctly implemented and tested before deployment. Key Activities: Integration of Security Components: Deploy encryption mechanisms, authentication protocols, and access control lists (ACLs). Configure firewalls, VPNs, and IDS/IPS systems. Security Testing: Static Application Security Testing (SAST): Identifies vulnerabilities in the codebase. Dynamic Application Security Testing (DAST): Tests system behavior under real-time attack scenarios. Penetration Testing: Ethical hackers simulate cyberattacks to find weaknesses. Fuzz Testing: Sends random data to the system to detect crashes or unexpected behavior. Vulnerability Assessment: Conduct security audits to check compliance with ISO 27001, SOC2, or HIPAA. Perform patch management to fix software vulnerabilities. Outcome: A fully tested security system ready for deployment with an implementation report documenting test results and fixes. f. Maintenance and Change Phase Once the system is deployed, ongoing security monitoring, updates, and improvements are required to address evolving threats. Key Activities: Continuous Security Monitoring: Use Security Information and Event Management (SIEM) tools like Splunk, IBM QRadar, or ELK Stack for real-time security monitoring. Set up automated log analysis to detect unusual activities. Patch Management & Updates: Regularly update firewalls, operating systems, and security tools to prevent zero-day attacks. Apply patches to fix newly discovered vulnerabilities. Incident Response and Recovery: Continuously refine the incident response plan (IRP). Conduct cybersecurity drills to test response efficiency. Compliance Audits: Perform periodic security audits to ensure regulatory compliance with GDPR, NIST, PCI-DSS, and HIPAA. Outcome: A continuously monitored and updated security system with an incident response plan in place. Conclusion The Security System Development Life Cycle (SSDLC) ensures that security is integrated into every phase of system development. By identifying threats early, implementing robust security controls, conducting continuous monitoring, and updating security measures, organizations can protect their systems from cyber threats while maintaining compliance with industry regulations. This structured approach enhances security, reduces risks, and ensures that the system remains resilient against emerging cyber threats. ",
        "keywords": [
            "Security System Development Life Cycle (SSDLC)",  
"investigation",  
"investigation phase",  
"scope",  
"resources",  
"costs",  
"security policies",  
"management approval",  
"planning",  
"encryption standards",  
"access control mechanisms",  
"regulatory compliance",  
"ISO 27001",  
"NIST",  
"GDPR",  
"security team",  
"feasibility study",  
"technical feasibility",  
"financial feasibility",  
"operational feasibility",  
"project charter",  
"security policy document",  
"analysis phase",  
"security measures",  
"risk analysis",  
"documentation",  
"risk identification",  
"threat analysis",  
"malware",  
"insider threats",  
"DDoS",  
"phishing",  
"DREAD",  
"CVSS (Common Vulnerability Scoring System)",  
"risk management",  
"risk assessment report",  
"logical design phase",  
"security architecture",  
"firewalls",  
"intrusion detection systems (IDS)",  
"encryption protocols",  
"role-based access control (RBAC)",  
"multi-factor authentication (MFA)",  
"incident response",  
"disaster recovery planning (DRP)",  
"business continuity planning (BCP)",  
"security blueprint",  
"physical design",  
"physical design phase",  
"IT infrastructure",  
"hardware feasibility",  
"software feasibility",  
"prototype development",  
"proof-of-concept (PoC)",  
"threat simulation",  
"cost estimation",  
"firewalls",  
"antivirus solutions",  
"intrusion prevention systems (IPS)",  
"deployment strategy",  
"security infrastructure",  
"implementation phase",  
"testing phase",  
"encryption mechanisms",  
"authentication protocols",  
"access control lists (ACLs)",  
"VPN",  
"IDS/IPS systems",  
"security testing",  
"Static Application Security Testing (SAST)",  
"Dynamic Application Security Testing (DAST)",  
"penetration testing",  
"ethical hacking",  
"fuzz testing",  
"vulnerability assessment",  
"security audits",  
"SOC2",  
"HIPAA",  
"patch management",  
"implementation report",  
"maintenance phase",  
"security monitoring",  
"Security Information and Event Management (SIEM)",  
"Splunk",  
"IBM QRadar",  
"ELK Stack",  
"log analysis",  
"zero-day attacks",  
"patch updates",  
"incident response plan (IRP)",  
"cybersecurity drills",  
"compliance audits",  
"PCI-DSS",  
"continuous security updates",  
"cyber threat resilience",  
"risk mitigation",  
"regulatory compliance"  
        ]
    },
    {
        "question_number": 7,
        "question_text": "Investigate the various components of an Information system and explain the\napplication of information system WRT operation and management support\nsystems?\nAn Information System (IS) is a structured setup that collects, processes, stores, and disseminates information. It consists of multiple interrelated components that work together to achieve business and operational objectives. The key components of an information system include Hardware, Software, Data, People, Procedures, and Networks. Each of these components plays a crucial role in ensuring that the system functions effectively while maintaining security and performance.",
        "answer": "a. Hardware Definition: Hardware refers to the physical components of an information system that execute software instructions, process data, and facilitate communication between users and machines. Role of Hardware in an Information System Serves as the foundation for computing tasks. Executes software operations and enables data processing. Facilitates storage, retrieval, and transfer of data between systems. Acts as an interface for users to interact with the system. Examples of Hardware Components Input Devices: Keyboards, mice, scanners, biometric readers, etc. Processing Units: Central Processing Units (CPU), Graphics Processing Units (GPU), and specialized processors. Storage Devices: Hard drives (HDD/SSD), USB drives, cloud storage, and database servers. Output Devices: Monitors, printers, speakers, etc. Networking Hardware: Routers, switches, firewalls, and network cables for communication. Security Measures for Hardware Access Control: Restricting physical access to servers and storage devices. Encryption: Protecting stored data to prevent unauthorized access. Hardware Firewalls & Intrusion Detection Systems: Preventing cyber threats. Regular Maintenance & Updates: Ensuring proper functioning of hardware components. b. Software Definition: Software is a set of instructions, applications, or programs that tell hardware what to do. It enables users to interact with the system and perform tasks efficiently. Types of Software in an Information System System Software: Includes operating systems (Windows, Linux, macOS) and utilities that manage hardware resources. Application Software: Includes word processors, databases, web applications, and enterprise resource planning (ERP) systems. Security Software: Firewalls, antivirus programs, encryption tools, and intrusion detection systems. Role of Software in an Information System Provides user interfaces to interact with the system. Facilitates automation of tasks and data processing. Supports network communication and information management. Helps enforce security protocols through authentication and access controls. Security Considerations for Software Regular patching and updates to fix vulnerabilities. Using secure coding practices to prevent malware attacks. Implementing role-based access control (RBAC) to restrict software privileges. Employing intrusion detection systems (IDS) to monitor unauthorized access. c. Data Definition: Data refers to raw facts and figures that are collected, stored, and processed by an information system to generate meaningful information. Role of Data in an Information System Acts as the core resource for decision-making. Helps businesses in analyzing trends, improving services, and forecasting future needs. Stored in databases, data warehouses, or cloud storage. Processed into information that can be shared across different departments. Types of Data Structured Data: Organized data stored in relational databases (e.g., SQL databases). Unstructured Data: Text files, emails, images, and videos. Big Data: Large volumes of data processed using AI and analytics. Security Measures for Data Protection Data Encryption: Protects sensitive data from unauthorized access. Regular Backups: Ensures data recovery in case of system failures. Access Control Policies: Restricts access to sensitive information. Data Masking & Tokenization: Protects sensitive user information (e.g., healthcare records). d. People Definition: People are the end-users, administrators, developers, and IT professionals who interact with and manage the information system. Roles of People in an Information System System Analysts: Evaluate system requirements and design solutions. Software Developers: Develop applications and security mechanisms. Database Administrators: Manage and protect data storage systems. Network Engineers: Maintain secure communication between different components. Security Experts: Monitor threats and enforce cybersecurity policies. End-Users: Employees or customers who interact with the system for daily operations. Security Concerns Related to People Social Engineering Attacks: Users being tricked into giving away credentials. Phishing Attacks: Fake emails and websites used to steal user data. Insider Threats: Employees intentionally or accidentally compromising security. Security Awareness Training: Educating employees on best practices for cybersecurity. e. Procedures Definition: Procedures refer to the rules, policies, and step-by-step instructions that govern how an information system operates. Role of Procedures in an Information System Define how tasks should be performed and ensure consistency. Guide users in system usage, troubleshooting, and security measures. Provide a structured approach to managing and protecting data. Examples of Information System Procedures User Access Policies: Guidelines on password management and access control. Incident Response Plans: Steps to follow in case of a security breach. Backup & Recovery Procedures: Instructions for restoring data after a system failure. Software Deployment Processes: Protocols for updating and installing applications. Security Aspects of Procedures Procedures must be regularly updated to reflect emerging security threats. Strict compliance with data protection laws (e.g., GDPR, HIPAA). Monitoring & Auditing: Ensuring policies are followed correctly. f. Networks Definition: Networks allow computers and devices to communicate and share information within an organization and beyond. Role of Networks in an Information System Enable data transmission between devices and users. Support remote access to systems and cloud services. Allow businesses to connect multiple branches through WAN (Wide Area Networks). Types of Networks Used in Information Systems Local Area Networks (LANs): Connects computers in a small geographical area (e.g., office). Wide Area Networks (WANs): Connects systems across larger distances (e.g., global business networks). Wireless Networks: Enables mobility and remote access via Wi-Fi and cellular networks. Cloud Networks: Provides scalable data storage and application hosting via cloud services. Security Threats to Networks Denial of Service (DoS) Attacks: Flooding the network to make services unavailable. Man-in-the-Middle Attacks (MitM): Intercepting communication between users. Rogue Access Points: Unauthorized Wi-Fi hotspots used for eavesdropping. Malware Injection: Infecting networked devices with malicious software. Network Security Measures Firewalls & Intrusion Detection Systems (IDS) to monitor and filter traffic. Virtual Private Networks (VPNs) for secure remote access. Strong Encryption Protocols (SSL/TLS) for secure data transmission. Regular Security Patching & Updates to prevent network vulnerabilities. ",
        "keywords": [
           "hardware",  
"hardware definition",  
"information system",  
"physical components",  
"software execution",  
"data processing",  
"communication devices",  
"input devices",  
"keyboards",  
"mice",  
"scanners",  
"biometric readers",  
"processing units",  
"CPU",  
"GPU",  
"specialized processors",  
"storage devices",  
"hard drives",  
"HDD",  
"SSD",  
"USB drives",  
"cloud storage",  
"database servers",  
"output devices",  
"monitors",  
"printers",  
"speakers",  
"networking hardware",  
"routers",  
"switches",  
"firewalls",  
"network cables",  
"security measures",  
"access control",  
"encryption",  
"hardware firewalls",  
"intrusion detection systems (IDS)",  
"regular maintenance",  
"software definition",  
"software",  
"system software",  
"operating systems",  
"Windows",  
"Linux",  
"macOS",  
"application software",  
"word processors",  
"databases",  
"web applications",  
"ERP systems",  
"security software",  
"antivirus programs",  
"firewalls",  
"encryption tools",  
"intrusion detection",  
"user interface",  
"automation",  
"data processing",  
"network communication",  
"security protocols",  
"role-based access control (RBAC)",  
"patching and updates",  
"secure coding practices",  
"malware prevention",  
"intrusion monitoring",  
"data definition",  
"data",  
"raw facts",  
"data processing",  
"decision-making",  
"business intelligence",  
"data storage",  
"databases",  
"data warehouses",  
"cloud storage",  
"structured data",  
"SQL databases",  
"unstructured data",  
"text files",  
"emails",  
"images",  
"videos",  
"big data",  
"AI analytics",  
"data security",  
"data encryption",  
"regular backups",  
"access control policies",  
"data masking",  
"tokenization",  
"people",  
"end-users",  
"system analysts",  
"software developers",  
"database administrators",  
"network engineers",  
"security experts",  
"social engineering attacks",  
"phishing attacks",  
"insider threats",  
"security awareness training",  
"procedures",  
"system rules",  
"task automation",  
"troubleshooting",  
"user access policies",  
"incident response plans",  
"backup and recovery",  
"software deployment",  
"compliance laws",  
"GDPR",  
"HIPAA",  
"monitoring and auditing",  
"networks",  
"network definition",  
"data transmission",  
"remote access",  
"cloud services",  
"LAN",  
"WAN",  
"wireless networks",  
"Wi-Fi",  
"cellular networks",  
"cloud networks",  
"network security",  
"Denial of Service (DoS) attacks",  
"Man-in-the-Middle (MitM) attacks",  
"rogue access points",  
"malware injection",  
"firewalls",  
"VPNs",  
"SSL/TLS encryption",  
"patch management",  
"network monitoring",  
"cybersecurity"  
        ]
    },
    {
        "question_number": 8,
        "question_text": "Attacks are the techniques that attackers use to exploit the vulnerabilities in \napplications Attacks are often confused with vulnerabilities, so please try to be\nsure that the attack you are describing is something that an attacker would do.\nrather than a weakness in an application\"\nConsider the Web Application-health care domain, list down any 8 attacks in the\ngiven domain and mention the root cause of the attack?",
        "answer": "Healthcare web applications store sensitive patient data, making them prime targets for cyberattacks. Here are all possible attacks in this domain: a. Injection-Based Attacks SQL Injection (SQLi): Attackers inject malicious SQL queries to manipulate or extract database records. Command Injection: Execution of arbitrary commands on the host operating system due to poor input validation. LDAP Injection: Attackers manipulate LDAP queries to access unauthorized user information. XML External Entity (XXE) Injection: Exploits vulnerabilities in XML parsers, leading to data leakage and denial of service. b. Authentication & Session-Based Attacks Brute Force Attacks: Attackers repeatedly try username-password combinations to gain access. Credential Stuffing: Using leaked credentials from other breaches to access accounts. Session Hijacking: Attackers steal session cookies to impersonate legitimate users. Session Fixation: Users are forced to use a pre-set session ID that the attacker can exploit. Broken Authentication: Poorly implemented login mechanisms lead to unauthorized access. c. Cross-Site Attacks Cross-Site Scripting (XSS): Injecting malicious scripts into web applications to steal user credentials or modify content. Cross-Site Request Forgery (CSRF): Tricks a logged-in user into making unintended requests to a healthcare application. d. Malware-Based Attacks Ransomware: Encrypts patient data and demands a ransom for decryption (e.g., WannaCry). Trojan Horse: Malicious software disguised as a legitimate program, often used for stealing sensitive data. Time Bomb: A malicious program activated at a specific time or event. Spyware: Secretly gathers user data and transmits it to an attacker. Adware: Displays intrusive ads that can lead to malware infections. e. Denial of Service (DoS) & Distributed DoS (DDoS) Attacks Volumetric Attacks: Overloading the server with excessive requests, making the application unavailable. Application Layer Attacks: Targeting specific features (e.g., login pages) to exhaust system resources. ICMP Flood (Ping of Death): Sending large ICMP packets to crash the system. f. Social Engineering Attacks Phishing: Fake emails/websites trick users into revealing sensitive information. Vishing (Voice Phishing): Attackers impersonate support staff over calls to extract login credentials. Quid Pro Quo Attack: Attackers offer a service in exchange for access to the system. Baiting: Attackers lure users into installing malware through infected USBs or downloads. g. Man-in-the-Middle (MitM) Attacks Eavesdropping: Attackers intercept and listen to communication between a user and a web application. Session Replay Attack: Capturing and reusing legitimate session data to gain unauthorized access. SSL Stripping: Downgrading a secure HTTPS connection to HTTP to steal sensitive data. h. Supply Chain & Third-Party Attacks Dependency Attacks: Injecting malicious code into third-party libraries or APIs used by healthcare apps. Cloud Security Vulnerabilities: Exploiting misconfigurations in cloud-based healthcare systems. i. File Upload & Data Corruption Attacks Zip Bomb: Uploading a compressed file that expands exponentially, crashing the server. Malicious File Upload: Uploading infected files that execute harmful scripts. Data Tampering: Unauthorized modification of patient records. j. Insider Threats Malicious Insider Attack: Employees misuse their access to leak, modify, or delete sensitive data. Negligent Insider Attack: Employees unintentionally expose data due to weak security practices. k. Exploit-Based Attacks Zero-Day Exploit: Attacking a vulnerability before it is discovered and patched. Privilege Escalation: Gaining unauthorized higher-level access within the system. l. Identity-Based Attacks Identity Spoofing: Using stolen credentials to impersonate legitimate users. Account Takeover (ATO): Attackers gain control over user accounts using stolen credentials. m. Internet of Medical Things (IoMT) Attacks Device Hijacking: Compromising medical devices (e.g., pacemakers, insulin pumps) to disrupt operations. Firmware Tampering: Modifying device firmware to introduce vulnerabilities. n. Side-Channel Attacks Timing Attack: Measuring response times to extract sensitive data. Cache Poisoning: Manipulating cache data to redirect users to malicious content. ",
        "keywords": [
           "healthcare web applications",  
"patient data",  
"cyberattacks",  
"security vulnerabilities",  
"injection-based attacks",  
"SQL Injection (SQLi)",  
"Command Injection",  
"LDAP Injection",  
"XML External Entity (XXE) Injection",  
"authentication attacks",  
"session-based attacks",  
"Brute Force Attacks",  
"Credential Stuffing",  
"Session Hijacking",  
"Session Fixation",  
"Broken Authentication",  
"cross-site attacks",  
"Cross-Site Scripting (XSS)",  
"Cross-Site Request Forgery (CSRF)",  
"malware-based attacks",  
"Ransomware",  
"WannaCry",  
"Trojan Horse",  
"Time Bomb",  
"Spyware",  
"Adware",  
"Denial of Service (DoS)",  
"Distributed Denial of Service (DDoS)",  
"Volumetric Attacks",  
"Application Layer Attacks",  
"ICMP Flood",  
"Ping of Death",  
"social engineering attacks",  
"Phishing",  
"Vishing (Voice Phishing)",  
"Quid Pro Quo Attack",  
"Baiting",  
"Man-in-the-Middle (MitM) Attacks",  
"Eavesdropping",  
"Session Replay Attack",  
"SSL Stripping",  
"supply chain attacks",  
"third-party attacks",  
"Dependency Attacks",  
"Cloud Security Vulnerabilities",  
"file upload attacks",  
"data corruption attacks",  
"Zip Bomb",  
"Malicious File Upload",  
"Data Tampering",  
"insider threats",  
"Malicious Insider Attack",  
"Negligent Insider Attack",  
"exploit-based attacks",  
"Zero-Day Exploit",  
"Privilege Escalation",  
"identity-based attacks",  
"Identity Spoofing",  
"Account Takeover (ATO)",  
"Internet of Medical Things (IoMT) Attacks",  
"Device Hijacking",  
"Firmware Tampering",  
"side-channel attacks",  
"Timing Attack",  
"Cache Poisoning"  
        ]
    },
    {
        "question_number": 9,
        "question_text": "What is digital signature? Explain the key generation, signing and signature \nverification algorithm. Bring out the steps followed to create the digital signature? \nA digital signature is an electronic equivalent of a handwritten signature used to ensure the authenticity and integrity of electronic documents and messages. It is created using asymmetric cryptography, which involves a pair of cryptographic keys:",
        "answer": "Private Key: Used by the sender to sign the message. It is kept secret. Public Key: Used by the receiver to verify the signature. It is publicly available. A digital signature ensures that the sender cannot later deny sending the message (non-repudiation), and that the message has not been tampered with during transmission (data integrity). Security Services Provided by Digital Signatures Digital signatures provide several key security services essential for safe and reliable electronic communication: a. Non-Repudiation Ensures that the sender of the message cannot deny having sent the message. The private key is unique to the sender, making the signature uniquely associated with them. b. Authentication Confirms the identity of the sender. A valid signature indicates that the message originated from a trusted source. c. Confidentiality (Optional, with encryption) Digital signatures alone do not provide confidentiality, but when combined with encryption, they ensure that only authorized recipients can read the message. d. Data Integrity Ensures that the message has not been modified during transmission. If even a small change is made to the message, the signature will become invalid. How Digital Signatures Work? A digital signature is created using an asymmetric cryptographic algorithm, typically RSA, ECDSA, or DSA. The process involves three key steps: a. Key Generation Before a digital signature can be used, a key pair must be generated using an asymmetric encryption algorithm. The sender generates a public key and a private key. The private key is kept secret and used for signing. The public key is shared with recipients for verification. Common algorithms used for key generation: RSA (Rivest-Shamir-Adleman) DSA (Digital Signature Algorithm) ECDSA (Elliptic Curve Digital Signature Algorithm) b. Signing Process (Sender Side) When a sender wants to digitally sign a document or message, the following steps occur: Message Hashing: The message is passed through a cryptographic hash function (e.g., SHA-256, SHA-512) to produce a fixed-size hash value. The hash function ensures that even a small change in the message results in a completely different hash. Encryption with Private Key (Signature Generation): The hash value is encrypted using the sender’s private key to generate the digital signature. The signed message is now ready to be transmitted. Message Transmission: The original message along with the digital signature is sent to the receiver. c. Verification Process (Receiver Side) When the receiver gets the message and signature, they follow these steps to verify its authenticity: Separate the Message and Signature: The received data consists of the original message and the digital signature. Generate Hash of the Received Message: The receiver hashes the received message using the same hash function used by the sender. Decrypt the Signature Using Sender’s Public Key: The receiver decrypts the digital signature using the sender’s public key. This reveals the original hash value that was encrypted by the sender. Compare Both Hashes: If the computed hash value from the message matches the decrypted hash from the signature, the message is authentic and unchanged. If the hashes do not match, it means the message was tampered with or the signature is invalid. Mathematical Representation: Advantages of Digital Signatures Enhanced Security: Provides authentication, integrity, and non-repudiation. Reduced Fraud: Prevents unauthorized modifications and forgery of documents. Legally Recognized: Accepted as legally binding in many countries under digital signature laws. Time-Efficient: Enables fast verification and authentication of digital documents. Paperless Transactions: Reduces the need for physical paperwork and storage. Applications of Digital Signatures Digital signatures are widely used in various domains, including: Email Security: Ensuring emails are not altered and come from the correct sender. E-Governance: Used in electronic voting, e-tax filing, and government contracts. Financial Transactions: Verifying the authenticity of online banking and stock market transactions. Software Distribution: Ensuring software updates are from trusted sources. ",
        "keywords": [
           "Private Key",  
"Public Key",  
"Digital Signature",  
"Non-Repudiation",  
"Authentication",  
"Confidentiality",  
"Data Integrity",  
"Security Services",  
"Key Generation",  
"Asymmetric Encryption",  
"RSA (Rivest-Shamir-Adleman)",  
"DSA (Digital Signature Algorithm)",  
"ECDSA (Elliptic Curve Digital Signature Algorithm)",  
"Signing Process",  
"Message Hashing",  
"SHA-256",  
"SHA-512",  
"Encryption with Private Key",  
"Message Transmission",  
"Verification Process",  
"Decrypting Signature",  
"Comparison of Hashes",  
"Mathematical Representation",  
"Advantages of Digital Signatures",  
"Enhanced Security",  
"Reduced Fraud",  
"Legally Recognized",  
"Time-Efficient",  
"Paperless Transactions",  
"Applications of Digital Signatures",  
"Email Security",  
"E-Governance",  
"Electronic Voting",  
"E-Tax Filing",  
"Financial Transactions",  
"Online Banking",  
"Stock Market Transactions",  
"Software Distribution"  
        ]
    },
    {
        "question_number": 10,
        "question_text": "Tabulate the security and information model focusing on the key features,\naccess control, kind of organization/domain which suits the model with its\nlimitation?\nA security model defines the framework for how security policies are enforced in a system. It describes rules for data access, integrity, and confidentiality and defines how security mechanisms operate to protect information.",
        "answer": "Types of Security Models: a. Bell-LaPadula Model (BLP Model) Used for: Confidentiality (ensures unauthorized access to sensitive information is prevented). Principle: Based on \"No Read Up, No Write Down\" (NRU-NWD) rule. Rules in BLP Model: Simple Security Property (No Read Up - NRU): A subject (user) can read data at their own level or lower levels. A subject cannot read data at higher levels (prevents unauthorized access to classified information). Star Property (No Write Down - NWD): A subject can write data only at the same or a higher level. It cannot write to lower levels to prevent leaking confidential data. Strong Star Property (No Read Up / No Write Down - NRU-NWD): A subject can only read and write at its own level. Cannot read up or write down, ensuring complete data isolation. Example: A classified user can read classified and unclassified documents but cannot read top-secret documents. Similarly, they cannot write to unclassified documents, preventing confidential leaks. b. Biba Model Used for: Integrity (prevents modification of data by unauthorized users). Principle: Based on \"No Write Up, No Read Down\" (NWU-NRD) rule. Rules in Biba Model: Simple Integrity Property (No Read Down - NRD): A subject can read only at its own level or above. It cannot read lower-level data to avoid untrusted information corrupting higher-level processes. Star Integrity Property (No Write Up - NWU): A subject can write only at the same or lower levels. It cannot write to higher levels, preventing low-integrity users from contaminating high-integrity data. Example: A low-level employee cannot edit or modify a manager's financial report, preventing unauthorized changes. c. Clark-Wilson Model Used for: Integrity and Authentication. Principle: Enforces well-formed transactions and separation of duties. Key Concepts: Subjects: Users interacting with the system. Unconstrained Data Items (UDI): Can be accessed directly. Constrained Data Items (CDI): Require special procedures to access. Transformation Process: A subject sends a request to access data. The request goes through an integrity verification process. If authorized, access is granted. Three Goals: Ensure only authorized users modify data. Prevent unauthorized modification. Maintain consistency in the system. Example: A banking system ensures that a transaction is only approved if verified by an account holder and bank staff. d. Noninterference Model Used for: Preventing indirect leaks of sensitive information. Principle: Ensures that low-level users cannot be affected by high-level users. How it works: If a high-security-level process performs an action, it does not affect lower-level users. Prevents covert channels, where attackers could infer classified information indirectly. Example: A low-level employee should not notice a performance slowdown when a top-secret file is accessed by an administrator. e. Chinese Wall Model Used for: Preventing conflicts of interest. Principle: Access changes dynamically based on previous user interactions. Prevents users from accessing data that could lead to a conflict of interest. Example: An investment analyst who has accessed Company A's financials cannot access Company B's records if they are competitors. f. Graham-Denning Model Used for: Secure creation, deletion, and access control for users and objects. Principle: Defines access rights for subjects and objects. Operations Allowed: Create & Delete objects and subjects securely. Grant & Revoke permissions. Read, write, and transfer rights. Example: A system administrator can grant read/write permissions to a user but cannot delete the data unless authorized. g. Harrison-Ruzzo-Ullman Model Used for: Access control and permission management. Principle: Defines how access rights are changed dynamically over time. Vigenère Cipher Justification The Vigenère Cipher is an improvement over traditional ciphers and offers better security. Weakness of Monoalphabetic Ciphers (Caesar & Substitution Ciphers) Caesar Cipher: Each letter is shifted by a fixed value Weakness: Easily broken using frequency analysis because each letter always maps to the same ciphertext. Substitution Cipher: Each letter is substituted with a different letter (random mapping). Weakness: Still vulnerable to frequency analysis. Strength of Vigenère Cipher Uses Multiple Alphabets (Polyalphabetic Cipher) Instead of a single fixed shift, it uses a key to shift letters differently across the message. The key is repeated cyclically, creating multiple shift patterns. Prevents Frequency Analysis Since each letter is encrypted differently based on its position and key letter, patterns are hidden. Makes it much harder for attackers to detect common letters (like ‘E’ in English). ",
        "keywords": [
"Security Models",  
"Bell-LaPadula Model (BLP)",  
"Confidentiality Model",  
"Access Control",  
"Security Levels",  
"Multi-Level Security (MLS)",  
"No Read Up (NRU)",  
"No Write Down (NWD)",  
"Simple Security Property",  
"Star Property",  
"Strong Star Property",  

"Biba Model",  
"Integrity Model",  
"No Read Down (NRD)",  
"No Write Up (NWU)",  
"Simple Integrity Property",  
"Star Integrity Property",  
"High-Integrity Data",  

"Clark-Wilson Model",  
"Data Integrity Enforcement",  
"Constrained Data Items (CDI)",  
"Unconstrained Data Items (UDI)",  
"Transformation Process",  
"Well-Formed Transactions",  
"Separation of Duties",  
"Integrity Verification",  
"Certified Transactions",  
"Access Control Triple",  

"Noninterference Model",  
"Preventing Covert Channels",  
"Information Flow Security",  
"Security Domain Isolation",  
"Low-Level User Protection",  

"Chinese Wall Model",  
"Conflict of Interest Prevention",  
"Dynamic Access Control",  
"Financial Data Protection",  
"Market Segmentation",  

"Graham-Denning Model",  
"Access Control Mechanism",  
"Secure Object Creation",  
"Subject-Object Relationship",  
"Grant & Revoke Permissions",  
"Read, Write, Execute Rights",  
"Security Policies",  

"Harrison-Ruzzo-Ullman Model",  
"Dynamic Access Rights",  
"Formal Security Model",  
"Access Control Matrix",  
"Authorization Mechanism",  

"Cryptographic Algorithms",  
"Vigenere Cipher",  
"Polyalphabetic Cipher",  
"Key-Based Encryption",  
"Multiple Shift Patterns",  
"Frequency Analysis Resistance",  
"Caesar Cipher Weakness",  
"Substitution Cipher Vulnerability",  
"Ciphertext Security",  
"Encryption & Decryption",  
"Cryptographic Strength",  
"Breaking Classical Ciphers",  
"Brute Force Attack Resistance",  
"Key Repetition",  
"Cryptanalysis Techniques",  
"Extended Vigenere Cipher",  
"One-Time Pad",  
"Shift Cipher",  
"Affine Cipher",  
"Block Cipher",  
"Stream Cipher",  
"Ciphertext-Only Attack",  
"Known-Plaintext Attack"
        ]
    },
    {
        "question_number": 11,
        "question_text": "a. Implement and vignere cipher for the given sentence \"TO BE OR NOT TO \nBE\" with the key \"CODE\"\nb. With the Caesar and Substitution ciphers we can use frequency analysis to \nguess some of the letters in the cipher text. Can we use frequency analysis\nwith the vignere cipher?",
        "answer": "a) Implementation of Vigenere Cipher for \"TO BE OR NOT TO BE\" with Key \"CODE\" The Vigenère Cipher is a polyalphabetic substitution cipher that uses a repeating keyword to encrypt the plaintext. Ciphertext = (Plaintext + Key) mod 26 Final encrypted text: \"VCEIQFQSVHRFG\" b) With Caesar and Substitution Ciphers, frequency analysis works because each letter is substituted consistently, meaning patterns remain visible in the ciphertext. However, Vigenère Cipher is polyalphabetic, meaning: Multiple shifts are used (based on the key), making letter frequencies spread out instead of being static. A single letter in the plaintext can be encoded differently depending on its position in the text. Repetition in key length can eventually expose the cipher (using Kasiski examination). Thus, frequency analysis alone is not enough to break Vigenère Cipher directly, but if the key length is discovered, it reduces to multiple Caesar ciphers, which can then be broken individually. ",
        "keywords": [
"Vigenere Cipher",  
"Polyalphabetic Cipher",  
"Modular Arithmetic",  
"Encryption Formula",  
"Ciphertext Calculation",  
"Key-Based Substitution",  
"Multiple Shift Cipher",  
"Cryptographic Strength",  
"Classical Encryption",  
"Symmetric Key Cipher",  
"Repeating Key Sequence",  
"Ciphertext = (Plaintext + Key) mod 26",  
"Final Encrypted Text: VCEIQFQSVHRFG",  

"Cryptanalysis Techniques",  
"Breaking Vigenere Cipher",  
"Frequency Analysis",  
"Letter Frequency Distribution",  
"Kasiski Examination",  
"Repetitive Key Vulnerability",  
"Key Length Discovery",  
"Index of Coincidence (IC)",  
"Brute Force Decryption",  
"Known-Plaintext Attack",  
"Ciphertext-Only Attack",  
"Cryptanalysis with Multiple Caesar Ciphers",  
"Pattern Recognition in Encryption",  
"Reducing Vigenere to Caesar Cipher",  


"Caesar Cipher",  
"Substitution Cipher",  
"Monoalphabetic Cipher",  
"Shift-Based Encryption",  
"Static Letter Substitution",  
"Vulnerable to Frequency Analysis",  
"Plaintext Pattern Visibility",  
"One-Time Pad (OTP) vs Vigenere",  
"Affine Cipher",  
"Transposition Ciphers",  
"Block vs Stream Cipher"

        ]
    },
    {
        "question_number": 12,
        "question_text": "Stuxnet is an Internet worm that infects Windows computers. It primarily spreads\nvia USB sticks, which allows it to get into computers and networks not normally\nconnected to the Internet. Once inside a network it uses a vanety of \nmechanisms to propagate to other machines within that network and gain\nprivilege once it has infected those machines. These mechanisms include both\nknown and patched vulnerabilities, and four \"zero-day exploits\"\nFrom the above case study justify the following queries\na Why is Stuxnet so sloppily (haphazardly) targeted?\nb. Why doesn't Stuxnet erase itself when it realizes it's not in the targeted\nnetwork?\nc. When it infects a network via USB stick, it's supposed to only spread to\nthree additional computers and to erase itself after 21 days--but it\ndoesn't do that. A mistake in programming, or a feature in the code not\nenabled?\nd. From a foreign policy perspective, that seems dumb. Why?",
        "answer": "(a) Stuxnet was not randomly designed; it was meant to target specific industrial control systems (ICS), particularly Siemens PLCs used in Iranian nuclear facilities. However, its spread to unintended networks suggests: Uncontrolled propagation – It infected non-target systems via USB sticks. Reinfections occurred because of imperfect kill-switch mechanisms. It may have been a state-sponsored attack, but lacked full control once released into the wild. Thus, Stuxnet's spread seemed sloppy, but its main target was highly precise (Iran's Natanz facility). (b) Stuxnet contained target-checking mechanisms to identify if it was inside the intended system (specific PLCs). However, it did not remove itself, likely because: Its designers did not implement a proper cleanup mechanism. Maintaining presence helped gather intelligence about other infected networks. Future attacks could use reinfection opportunities. Thus, while it was supposed to be stealthy, failing to self-delete increased its exposure when it was discovered. (c) Stuxnet was programmed to: Infect only three computers per USB transmission to avoid detection. Erase itself after 21 days to prevent long-term analysis. However, it did not always do this, suggesting: Bug in the self-deletion code, failing in some cases. Intentional disabling of the self-destruct feature to allow longer persistence. Different attack versions were deployed, some with persistence. Thus, it is unclear whether this was a coding mistake or a feature deliberately left open for future use. (d) From a foreign policy perspective, Stuxnet was a risky move because: It exposed cyber warfare tactics – After Stuxnet was discovered, other nations (Russia, China, Iran) developed their own cyberweapons. It set a dangerous precedent – Opened doors for cyber retaliation and escalation of state-sponsored cyber attacks. It could not be fully controlled – Unlike traditional military weapons, malware spreads unpredictably. It led to increased cybersecurity defenses – The public disclosure of Stuxnet led to better protection of industrial systems, making future attacks more difficult. Thus, while successful in disrupting Iran’s nuclear program, it backfired globally by increasing awareness and response to cyber warfare. ",
        "keywords": [ 
            "Stuxnet",  
            "Cyber Warfare",  
            "Industrial Control Systems (ICS)",  
            "Supervisory Control and Data Acquisition (SCADA)",  
            "Programmable Logic Controllers (PLC)",  
            "Siemens PLC Exploit",  
            "Zero-Day Vulnerabilities",  
            "Natanz Nuclear Facility",  
            "State-Sponsored Malware",  
            "Advanced Persistent Threat (APT)",  
            "Precision Targeting",  
            "ICS Cybersecurity",  
            "Uncontrolled Propagation",  
            "USB-Based Malware Transmission",  
            "Self-Spreading Worm",  
            "Reinfection Mechanism",  
            "Kill-Switch Failure",  
            "Collateral Infections",  
            "Network Worm Behavior",  
            "Non-Targeted System Infection",  
            "Malware Containment Failure",  
            "Air-Gapped Network Infection",  
            "Target-Checking Mechanism",  
            "System Profiling",  
            "Selective Activation",  
            "Intelligence Gathering via Malware",  
            "Failure to Self-Delete",  
            "Bug in Self-Destruct Code",  
            "Intentional Persistence",  
            "Erasure After 21 Days",  
            "Multiple Malware Variants",  
            "Delayed Detection",   
            "Cyber Warfare Disclosure",  
            "Nation-State Cyber Attacks",  
            "Cyber Retaliation",  
            "Escalation of Cyber Conflicts",  
            "Precedent for Future Attacks",  
            "Unintended Global Cybersecurity Impact",  
            "Reverse Engineering of Stuxnet",  
            "Development of New Cyber Weapons",  
            "Critical Infrastructure Protection",  
            "Cyber Arms Race",  
            "ICS/SCADA Defense Strategies"
            
        ]
    }
]